@model ERPDomain.Entities.DynamicMenu

<link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
<body class="centerBorder">
    <p>
        <font style="font-size:14px; font-weight:bold; color:darkgreen;">Dynamic Menu: Create</font><br><br>
    </p>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            

            <div class="form-group">
                @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ParentID2", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MenuLevel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MenuLevel, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MenuName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MenuName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            

            <div class="form-group">
                @Html.LabelFor(model => model.ControllerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ControllerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ControllerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MethodName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MethodName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MethodName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AreaName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AreaName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AreaName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ResourceName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ResourceName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ResourceName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <!-- Adjust this to be sm/md/lg, whatever fits best for you -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.Plugin, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-5">
                            @Html.CheckBoxFor(model => model.Plugin, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Plugin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <!-- Adjust this to be sm/md/lg, whatever fits best for you -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.Buy, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-5">
                            @Html.CheckBoxFor(model => model.Buy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Buy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            

            

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>

    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
