
@model ERPDomain.Models.OrganizationBranchModel

<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<script src="~/Scripts/jquery-ui-1.8.24.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script src="~/Scripts/popupui2.js"></script>
<script src="~/Scripts/tabui.js"></script>
@{
    ViewBag.Title = "Edit";
}

<div id="dialog-alert2" style="display: none">
    <p>
        @TempData["msg"]!
    </p>
</div>

<div id="dialog-confirm2" style="display: none">
    <p>
        <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
        Are you sure to delete?
    </p>
</div>
<div id="dialog-edit2" style="display: none">
</div>
<div id="dialog-detail2" style="display: none">
</div>

<div>
    @if (TempData["Message"].ToString() != "")
    {
        <div class="Message">@TempData["Message"]</div>
    }
    @if (ViewBag.DeleteMessage != null)
    {
        <div class="DeleteMessage">ViewBag.DeleteMessage</div>
    }
</div>

<div id="tabs">

    <ul>
        <li><a href="#tabs-1">Organization</a></li>
        <li><a href="#tabs-2">Branch</a></li>

    </ul>

    <div id="tabs-1">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Organization</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Organization.ID)
               
                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.OrganizationCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.OrganizationCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.OrganizationCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.OrganizationName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.OrganizationName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.OrganizationName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.PostCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.CountryCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.CountryCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.CountryCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.EPFRef, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.EPFRef, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.EPFRef, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.SocsoRef, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.SocsoRef, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.SocsoRef, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.CurrencyCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.CurrencyCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.CurrencyCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.CompRegNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.CompRegNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.CompRegNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organization.GSTRegNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization.GSTRegNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization.GSTRegNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>

    <div id="tabs-2">
        <p>
            @Html.ActionLink("Create New", "CreateBranch", new { organizationId = Model.Organization.ID, organizationCode = Model.Organization.OrganizationCode }, new { id = "lnkCreate2" })
        </p>
        <table class="table">
            <tr>
                <th>Organization Code</th>
                <th>Branch Code</th>
                <th>Branch Name</th>
            </tr>
            @if (Model.Branch != null)
            {
                foreach (var item in Model.Branch)
                {
                    string selectedRow = "";
                    if (item.OrganizationID == ViewBag.organizationId)
                    {
                        selectedRow = "success";
                    }
                    <tr class="@selectedRow">

                        <td>
                            @Html.DisplayFor(modelItem => Model.Organization.OrganizationCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BranchCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BranchName)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "EditBranch", new { organizationId = Model.Organization.ID, branchId = item.ID, organizationCode = Model.Organization.OrganizationCode, branchCode = item.BranchCode }, new { @class = "lnkEdit2" })
                        </td>
                        <td>
                            @Html.ActionLink("Delete", "DeleteBranch", new { organizationId = Model.Organization.ID, branchId = item.ID }, new { @class = "lnkDelete2" })
                        </td>
                    </tr>
                }
            }
        </table>

    </div>

</div>

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
